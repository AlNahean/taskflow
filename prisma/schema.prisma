// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model Task {
    id          String   @id @default(uuid())
    title       String
    description String?
    status      String   @default("todo") // Changed from enum to String
    priority    String   @default("medium") // Changed from enum to String
    category    String   @default("personal") // Changed from enum to String
    startDate   DateTime @default(now())
    dueDate     DateTime
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    starred     Boolean  @default(false)

    suggestedTaskId String?        @unique
    suggestion      SuggestedTask? @relation(fields: [suggestedTaskId], references: [id])

    subtasks SubTask[] // Relation to SubTasks
}

model Note {
    id             String          @id @default(uuid())
    title          String
    content        String?
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    suggestedTasks SuggestedTask[]
}

model SuggestedTask {
    id          String    @id @default(uuid())
    title       String
    description String?
    status      String    @default("todo") // Changed from enum to String
    priority    String    @default("medium") // Changed from enum to String
    category    String    @default("personal") // Changed from enum to String
    startDate   DateTime?
    dueDate     DateTime?
    isAdded     Boolean   @default(false)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    subtasks    String? // Changed from Json to String - store JSON as text

    noteId String
    note   Note   @relation(fields: [noteId], references: [id], onDelete: Cascade)

    createdTask Task?

    @@index([noteId])
}

model SubTask {
    id        String   @id @default(uuid())
    text      String
    completed Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    taskId String
    task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)

    @@index([taskId])
}
